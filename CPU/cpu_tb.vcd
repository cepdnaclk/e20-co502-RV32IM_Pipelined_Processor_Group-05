$date
	Mon Jan 27 14:10:22 2025
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module CPU_tb $end
$var wire 32 ! MEM_WRITE_DATA [31:0] $end
$var wire 1 " MEM_WRITE $end
$var wire 1 # MEM_READ $end
$var wire 32 $ MEM_ADDRESS [31:0] $end
$var reg 1 % BUSYWAIT $end
$var reg 1 & CLK $end
$var reg 32 ' INSTRUCTION [31:0] $end
$var reg 32 ( PC [31:0] $end
$var reg 32 ) READ_DATA [31:0] $end
$var reg 1 * RESET $end
$scope module cpu $end
$var wire 1 % BUSYWAIT $end
$var wire 1 & CLK $end
$var wire 32 + INSTRUCTION [31:0] $end
$var wire 32 , PC [31:0] $end
$var wire 32 - READ_DATA [31:0] $end
$var wire 1 * RESET $end
$var wire 5 . WB_ADDRESS [4:0] $end
$var wire 32 / extended_imm_value_out [31:0] $end
$var wire 32 0 extended_imm_value [31:0] $end
$var wire 1 1 WRITE_ENABLE $end
$var wire 32 2 WRITE_DATA [31:0] $end
$var wire 1 3 TWOSCOMP_OUT $end
$var wire 1 4 TWOSCOMP $end
$var wire 1 5 REGWRITE_ENABLE_OUT2 $end
$var wire 1 6 REGWRITE_ENABLE_OUT $end
$var wire 1 7 REGWRITE_ENABLE $end
$var wire 32 8 READ_DATA_OUT [31:0] $end
$var wire 5 9 RD_OUT3 [4:0] $end
$var wire 5 : RD_OUT2 [4:0] $end
$var wire 5 ; RD_OUT [4:0] $end
$var wire 32 < PC_PLUS_FOUR_OUT2 [31:0] $end
$var wire 32 = PC_PLUS_FOUR_OUT [31:0] $end
$var wire 32 > PC_PLUS_FOUR [31:0] $end
$var wire 32 ? PC_OUT2 [31:0] $end
$var wire 32 @ PC_OUT [31:0] $end
$var wire 32 A OUT2_TWOSCOMP [31:0] $end
$var wire 32 B OUT2 [31:0] $end
$var wire 32 C OUT1 [31:0] $end
$var wire 1 D MUX3_SELECT_OUT3 $end
$var wire 1 E MUX3_SELECT_OUT2 $end
$var wire 1 F MUX3_SELECT_OUT $end
$var wire 1 G MUX3_SELECT $end
$var wire 1 H MUX2_SELECT_OUT $end
$var wire 1 I MUX2_SELECT $end
$var wire 1 J MUX1_SELECT_OUT $end
$var wire 1 K MUX1_SELECT $end
$var wire 32 L MEM_WRITE_DATA [31:0] $end
$var wire 1 " MEM_WRITE $end
$var wire 1 # MEM_READ $end
$var wire 1 M MEMWRITE_OUT $end
$var wire 1 N MEMWRITE $end
$var wire 1 O MEMREAD_OUT $end
$var wire 1 P MEMREAD $end
$var wire 1 Q JUMP_OUT $end
$var wire 1 R JUMP $end
$var wire 32 S JAL_RESULT3 [31:0] $end
$var wire 32 T JAL_RESULT2 [31:0] $end
$var wire 32 U JAL_RESULT [31:0] $end
$var wire 1 V JAL_OUT $end
$var wire 1 W JAL $end
$var wire 32 X INSTRUCTION_OUT [31:0] $end
$var wire 3 Y IMMEDIATE [2:0] $end
$var wire 3 Z FUNC3_OUT2 [2:0] $end
$var wire 3 [ FUNC3_OUT [2:0] $end
$var wire 32 \ DATA2_OUT [31:0] $end
$var wire 32 ] DATA2 [31:0] $end
$var wire 32 ^ DATA1_OUT [31:0] $end
$var wire 32 _ DATA1 [31:0] $end
$var wire 1 ` BRANCH_OUT $end
$var wire 1 a BRANCH $end
$var wire 1 b ALU_ZERO $end
$var wire 32 c ALU_RESULT [31:0] $end
$var wire 5 d ALUOP_OUT [4:0] $end
$var wire 5 e ALUOP [4:0] $end
$var reg 32 f MEM_ADDRESS [31:0] $end
$scope module EX_MEMREG $end
$var wire 1 % BUSYWAIT $end
$var wire 1 & CLK $end
$var wire 1 * RESET $end
$var wire 1 6 REGWRITE_ENABLE_IN $end
$var wire 5 g RD_IN [4:0] $end
$var wire 1 F MUX3_SELECT_IN $end
$var wire 1 M MEM_WRITE_IN $end
$var wire 1 O MEM_READ_IN $end
$var wire 3 h FUNC3_IN [2:0] $end
$var wire 32 i DATA2_IN [31:0] $end
$var wire 32 j ALUUD_IN [31:0] $end
$var reg 32 k ALUUD_OUT [31:0] $end
$var reg 32 l DATA2_OUT [31:0] $end
$var reg 3 m FUNC3_OUT [2:0] $end
$var reg 1 # MEM_READ_OUT $end
$var reg 1 " MEM_WRITE_OUT $end
$var reg 1 E MUX3_SELECT_OUT $end
$var reg 5 n RD_OUT [4:0] $end
$var reg 1 5 REGWRITE_ENABLE_OUT $end
$upscope $end
$scope module ID_EXREG $end
$var wire 1 % BUSYWAIT $end
$var wire 1 & CLK $end
$var wire 3 o FUNC3_IN [2:0] $end
$var wire 5 p RD_IN [4:0] $end
$var wire 1 * RESET $end
$var wire 1 4 TWOSCOMP_IN $end
$var wire 1 7 REGWRITE_IN $end
$var wire 32 q PC_PLUS_FOUR_IN [31:0] $end
$var wire 32 r PC_IN [31:0] $end
$var wire 1 G MUX3_IN $end
$var wire 1 I MUX2_IN $end
$var wire 1 K MUX1_IN $end
$var wire 1 N MEMWRITE_IN $end
$var wire 1 P MEMREAD_IN $end
$var wire 1 R JUMP_IN $end
$var wire 1 W JAL_IN $end
$var wire 32 s IMM_IN [31:0] $end
$var wire 32 t DATA2_IN [31:0] $end
$var wire 32 u DATA1_IN [31:0] $end
$var wire 1 a BRANCH_IN $end
$var wire 5 v ALU_IN [4:0] $end
$var reg 5 w ALU_OUT [4:0] $end
$var reg 1 ` BRANCH_OUT $end
$var reg 32 x DATA1_OUT [31:0] $end
$var reg 32 y DATA2_OUT [31:0] $end
$var reg 3 z FUNC3_OUT [2:0] $end
$var reg 32 { IMM_OUT [31:0] $end
$var reg 1 V JAL_OUT $end
$var reg 1 Q JUMP_OUT $end
$var reg 1 O MEMREAD_OUT $end
$var reg 1 M MEMWRITE_OUT $end
$var reg 1 J MUX1_OUT $end
$var reg 1 H MUX2_OUT $end
$var reg 1 F MUX3_OUT $end
$var reg 32 | PC_OUT [31:0] $end
$var reg 32 } PC_PLUS_FOUR_OUT [31:0] $end
$var reg 5 ~ RD_OUT [4:0] $end
$var reg 1 6 REGWRITE_OUT $end
$var reg 1 3 TWOSCOMP_OUT $end
$upscope $end
$scope module IF_IDREG $end
$var wire 1 % BUSYWAIT $end
$var wire 1 & CLK $end
$var wire 32 !" INSTRUCTION_IN [31:0] $end
$var wire 32 "" PC_IN [31:0] $end
$var wire 1 * RESET $end
$var wire 32 #" PC_PLUS_FOUR_IN [31:0] $end
$var reg 32 $" INSTRUCTION_OUT [31:0] $end
$var reg 32 %" PC_OUT [31:0] $end
$var reg 32 &" PC_PLUS_FOUR_OUT [31:0] $end
$upscope $end
$scope module JAL_MUX $end
$var wire 32 '" IN1 [31:0] $end
$var wire 1 V SELECT $end
$var wire 32 (" IN0 [31:0] $end
$var reg 32 )" OUT [31:0] $end
$upscope $end
$scope module MEM_WBREG $end
$var wire 32 *" ALUOUT_IN [31:0] $end
$var wire 1 % BUSYWAIT $end
$var wire 1 & CLK $end
$var wire 32 +" MEM_IN [31:0] $end
$var wire 1 E MUX3_SELECT_IN $end
$var wire 5 ," RD_IN [4:0] $end
$var wire 1 5 REGWRITE_ENABLE_IN $end
$var wire 1 * RESET $end
$var reg 32 -" ALUOUT_OUT [31:0] $end
$var reg 32 ." MEM_OUT [31:0] $end
$var reg 1 D MUX3_SELECT_OUT $end
$var reg 5 /" RD_OUT [4:0] $end
$var reg 1 1 REGWRITE_ENABLE_OUT $end
$upscope $end
$scope module MUX3 $end
$var wire 32 0" IN0 [31:0] $end
$var wire 32 1" IN1 [31:0] $end
$var wire 1 D SELECT $end
$var reg 32 2" OUT [31:0] $end
$upscope $end
$scope module adder $end
$var wire 32 3" IN1 [31:0] $end
$var wire 32 4" OUT [31:0] $end
$upscope $end
$scope module alu $end
$var wire 5 5" SELECT [4:0] $end
$var wire 32 6" Result_xor [31:0] $end
$var wire 32 7" Result_srl [31:0] $end
$var wire 32 8" Result_sltu [31:0] $end
$var wire 32 9" Result_slt [31:0] $end
$var wire 32 :" Result_sll [31:0] $end
$var wire 32 ;" Result_remu [31:0] $end
$var wire 32 <" Result_rem [31:0] $end
$var wire 32 =" Result_or [31:0] $end
$var wire 32 >" Result_mulhu [31:0] $end
$var wire 32 ?" Result_mulhsu [31:0] $end
$var wire 32 @" Result_mulh [31:0] $end
$var wire 32 A" Result_mul [31:0] $end
$var wire 32 B" Result_div [31:0] $end
$var wire 32 C" Result_and [31:0] $end
$var wire 32 D" Result_add [31:0] $end
$var wire 32 E" DATA2 [31:0] $end
$var wire 32 F" DATA1 [31:0] $end
$var reg 32 G" RESULT [31:0] $end
$var reg 1 b ZERO $end
$scope module add0 $end
$var wire 32 H" result [31:0] $end
$var wire 32 I" operand_B [31:0] $end
$var wire 32 J" operand_A [31:0] $end
$upscope $end
$scope module and0 $end
$var wire 32 K" result [31:0] $end
$var wire 32 L" operand_B [31:0] $end
$var wire 32 M" operand_A [31:0] $end
$upscope $end
$scope module div0 $end
$var wire 32 N" result [31:0] $end
$var wire 32 O" operand_B [31:0] $end
$var wire 32 P" operand_A [31:0] $end
$upscope $end
$scope module mul0 $end
$var wire 32 Q" result [31:0] $end
$var wire 64 R" product [63:0] $end
$var wire 32 S" operand_B [31:0] $end
$var wire 32 T" operand_A [31:0] $end
$upscope $end
$scope module mulh0 $end
$var wire 32 U" result [31:0] $end
$var wire 64 V" product [63:0] $end
$var wire 32 W" operand_B [31:0] $end
$var wire 32 X" operand_A [31:0] $end
$upscope $end
$scope module mulhsu0 $end
$var wire 32 Y" result [31:0] $end
$var wire 64 Z" product [63:0] $end
$var wire 32 [" operand_B [31:0] $end
$var wire 32 \" operand_A [31:0] $end
$upscope $end
$scope module mulhu0 $end
$var wire 32 ]" result [31:0] $end
$var wire 64 ^" product [63:0] $end
$var wire 32 _" operand_B [31:0] $end
$var wire 32 `" operand_A [31:0] $end
$upscope $end
$scope module or0 $end
$var wire 32 a" result [31:0] $end
$var wire 32 b" operand_B [31:0] $end
$var wire 32 c" operand_A [31:0] $end
$upscope $end
$scope module rem0 $end
$var wire 32 d" result [31:0] $end
$var wire 32 e" operand_B [31:0] $end
$var wire 32 f" operand_A [31:0] $end
$upscope $end
$scope module remu0 $end
$var wire 32 g" result [31:0] $end
$var wire 32 h" operand_B [31:0] $end
$var wire 32 i" operand_A [31:0] $end
$upscope $end
$scope module sll0 $end
$var wire 32 j" result [31:0] $end
$var wire 32 k" operand_B [31:0] $end
$var wire 32 l" operand_A [31:0] $end
$upscope $end
$scope module slt0 $end
$var wire 32 m" result [31:0] $end
$var wire 32 n" operand_B [31:0] $end
$var wire 32 o" operand_A [31:0] $end
$upscope $end
$scope module sltu0 $end
$var wire 32 p" result [31:0] $end
$var wire 32 q" operand_B [31:0] $end
$var wire 32 r" operand_A [31:0] $end
$upscope $end
$scope module srl0 $end
$var wire 32 s" result [31:0] $end
$var wire 32 t" operand_B [31:0] $end
$var wire 32 u" operand_A [31:0] $end
$upscope $end
$scope module xor0 $end
$var wire 32 v" result [31:0] $end
$var wire 32 w" operand_B [31:0] $end
$var wire 32 x" operand_A [31:0] $end
$upscope $end
$upscope $end
$scope module cu $end
$var wire 32 y" INSTRUCTION [31:0] $end
$var reg 5 z" ALUOP [4:0] $end
$var reg 1 a BRANCH $end
$var reg 3 {" FUNCT3 [2:0] $end
$var reg 7 |" FUNCT7 [6:0] $end
$var reg 3 }" IMMEDIATE [2:0] $end
$var reg 1 W JAL $end
$var reg 1 R JUMP $end
$var reg 1 P MEMORYREAD $end
$var reg 1 N MEMORYWRITE $end
$var reg 1 K MUX1 $end
$var reg 1 I MUX2 $end
$var reg 1 G MUX3 $end
$var reg 8 ~" OPCODE [7:0] $end
$var reg 1 7 REGISTERWRITE $end
$var reg 1 4 TWOSCOMP $end
$upscope $end
$scope module immex $end
$var wire 3 !# imm_select [2:0] $end
$var wire 32 "# imm_value [31:0] $end
$var wire 20 ## U_imm [19:0] $end
$var wire 5 $# S_imm_2 [4:0] $end
$var wire 7 %# S_imm_1 [6:0] $end
$var wire 10 &# J_imm_4 [9:0] $end
$var wire 1 '# J_imm_3 $end
$var wire 8 (# J_imm_2 [7:0] $end
$var wire 1 )# J_imm_1 $end
$var wire 12 *# I_imm [11:0] $end
$var wire 4 +# B_imm_4 [3:0] $end
$var wire 6 ,# B_imm_3 [5:0] $end
$var wire 1 -# B_imm_2 $end
$var wire 1 .# B_imm_1 $end
$var reg 32 /# extended_imm_value [31:0] $end
$upscope $end
$scope module mux1 $end
$var wire 32 0# IN0 [31:0] $end
$var wire 32 1# IN1 [31:0] $end
$var wire 1 J SELECT $end
$var reg 32 2# OUT [31:0] $end
$upscope $end
$scope module mux2 $end
$var wire 32 3# IN0 [31:0] $end
$var wire 32 4# IN1 [31:0] $end
$var wire 1 H SELECT $end
$var reg 32 5# OUT [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 5 6# ADRS1 [4:0] $end
$var wire 5 7# ADRS2 [4:0] $end
$var wire 1 & CLK $end
$var wire 32 8# DATA_OUT1 [31:0] $end
$var wire 32 9# DATA_OUT2 [31:0] $end
$var wire 1 * RESET $end
$var wire 5 :# WB_ADDRESS [4:0] $end
$var wire 32 ;# WRITE_DATA [31:0] $end
$var wire 1 1 WRITE_ENABLE $end
$var reg 32 <# DATA1 [31:0] $end
$var reg 32 =# DATA2 [31:0] $end
$var integer 32 ># i [31:0] $end
$upscope $end
$scope module twos_complement $end
$var wire 32 ?# DATA2 [31:0] $end
$var wire 1 3 select $end
$var reg 32 @# DATA2_OUT [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx @#
bx ?#
bx >#
bx =#
bx <#
bx ;#
bz :#
bx 9#
bx 8#
bx 7#
bx 6#
bx 5#
b0 4#
bx 3#
b0 2#
b0 1#
b0 0#
bx /#
x.#
x-#
bx ,#
bx +#
bx *#
x)#
bx (#
x'#
bx &#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
b0 x"
bx w"
bx v"
b0 u"
bx t"
bx s"
b0 r"
bx q"
bx p"
b0 o"
bx n"
bx m"
b0 l"
bx k"
bx j"
b0 i"
bx h"
bx g"
b0 f"
bx e"
bx d"
b0 c"
bx b"
bx a"
b0 `"
bx _"
bx ^"
bx ]"
b0 \"
bx ["
bx Z"
bx Y"
b0 X"
bx W"
bx V"
bx U"
b0 T"
bx S"
bx R"
bx Q"
b0 P"
bx O"
bx N"
b0 M"
bx L"
bx K"
b0 J"
bx I"
bx H"
bx G"
b0 F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
b0 5"
bx 4"
b0 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
b0 +"
bx *"
bx )"
bx ("
b0 '"
bx &"
bx %"
bx $"
bx #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
b0 i
b0 h
b0 g
bx f
bx e
b0 d
bx c
xb
xa
0`
bx _
b0 ^
bx ]
b0 \
b0 [
bx Z
bx Y
bx X
xW
0V
bx U
bx T
bx S
xR
0Q
xP
0O
xN
0M
bx L
xK
0J
xI
0H
xG
0F
xE
xD
b0 C
bx B
bx A
bx @
b0 ?
bx >
bx =
b0 <
b0 ;
bx :
bx 9
bx 8
x7
06
x5
x4
03
bx 2
x1
bx 0
b0 /
bz .
b0 -
b0 ,
b0 +
1*
b0 )
b0 (
b0 '
0&
0%
bx $
x#
x"
bx !
$end
#10
b100 >
b100 #"
b100 4"
#20
b0 C"
b0 K"
b0x 8"
b0x p"
b0x 9"
b0x m"
#50
b0 ]
b0 t
b0 9#
b0 =#
b0 _
b0 u
b0 8#
b0 <#
b0 A
b0 E"
b0 I"
b0 L"
b0 O"
b0 S"
b0 W"
b0 ["
b0 _"
b0 b"
b0 e"
b0 h"
b0 k"
b0 n"
b0 q"
b0 t"
b0 w"
b0 @#
b0 B
b0 5#
b0 ?#
b0 0
b0 s
b0 /#
b0 3#
b0 |"
b0 {"
b0 ~"
b0 ##
b0 *#
b0 %#
b0 $#
0.#
0-#
b0 ,#
b0 +#
0)#
b0 (#
0'#
b0 &#
b0 p
b0 o
b0 7#
b0 6#
b0 $
b0 f
b0 2
b0 2"
b0 ;#
b0 X
b0 $"
b0 y"
b0 "#
b0 =
b0 q
b0 &"
b0 @
b0 r
b0 %"
b100000 >#
b0 :
b0 n
b0 ,"
b0 Z
b0 m
b0 !
b0 L
b0 l
b0 T
b0 k
b0 *"
05
0E
0#
b0 9
b0 /"
b0 8
b0 ."
b0 1"
b0 S
b0 -"
b0 0"
01
0D
1&
#70
b0 U
b0 j
b0 )"
b0 >"
b0 ]"
b0 ?"
b0 Y"
b0 @"
b0 U"
b0 A"
b0 Q"
1b
b0 c
b0 ("
b0 G"
b0 6"
b0 v"
b0 8"
b0 p"
b0 9"
b0 m"
b0 ="
b0 a"
b0 7"
b0 s"
b0 :"
b0 j"
b0 ^"
b0 Z"
b0 V"
b0 R"
b0 D"
b0 H"
#100
0&
0*
#150
1&
#170
0"
x3
xV
xQ
x`
xO
xM
x6
xF
xH
xJ
bx d
bx w
bx 5"
b100 =
b100 q
b100 &"
#200
0&
b1100010000000010110011 '
b1100010000000010110011 +
b1100010000000010110011 !"
b100 (
b100 ,
b100 ""
b100 3"
#210
b1000 >
b1000 #"
b1000 4"
#250
1&
#270
b1100010000000000000000 A
b1100010000000000000000 E"
b1100010000000000000000 I"
b1100010000000000000000 L"
b1100010000000000000000 O"
b1100010000000000000000 S"
b1100010000000000000000 W"
b1100010000000000000000 ["
b1100010000000000000000 _"
b1100010000000000000000 b"
b1100010000000000000000 e"
b1100010000000000000000 h"
b1100010000000000000000 k"
b1100010000000000000000 n"
b1100010000000000000000 q"
b1100010000000000000000 t"
b1100010000000000000000 w"
b1100010000000000000000 @#
b1100010000000000000000 B
b1100010000000000000000 5#
b1100010000000000000000 ?#
b1100010000000000000000 0
b1100010000000000000000 s
b1100010000000000000000 /#
b1100010000000000000000 3#
b11 ]
b11 t
b11 9#
b11 =#
b10 _
b10 u
b10 8#
b10 <#
04
b0 Y
b0 }"
b0 !#
0W
0R
0a
0P
0N
17
0G
1I
1K
b0 e
b0 v
b0 z"
b110011 ~"
b1100010000 ##
b11 *#
b1 $#
1-#
b10000 (#
1'#
b1 &#
b1 p
b11 7#
b10 6#
b100 @
b100 r
b100 %"
b1000 =
b1000 q
b1000 &"
b1100010000000010110011 X
b1100010000000010110011 $"
b1100010000000010110011 y"
b1100010000000010110011 "#
b100 <
b100 }
b100 '"
x5
xE
x"
x#
#290
b1100010000000000000000 6"
b1100010000000000000000 v"
b1 8"
b1 p"
b1 9"
b1 m"
b1100010000000000000000 ="
b1100010000000000000000 a"
b0 ;"
b0 g"
b0 <"
b0 d"
b0 B"
b0 N"
b1100010000000000000000 D"
b1100010000000000000000 H"
#300
0&
b1000000010101100000000010110011 '
b1000000010101100000000010110011 +
b1000000010101100000000010110011 !"
b1000 (
b1000 ,
b1000 ""
b1000 3"
#310
b1100 >
b1100 #"
b1100 4"
#350
1&
#370
b1100010000000000000000 U
b1100010000000000000000 j
b1100010000000000000000 )"
b1000000010101100000000000000000 0
b1000000010101100000000000000000 s
b1000000010101100000000000000000 /#
b1000000010101100000000000000000 3#
b101 ]
b101 t
b101 9#
b101 =#
b1100 _
b1100 u
b1100 8#
b1100 <#
b11 A
b11 E"
b11 I"
b11 L"
b11 O"
b11 S"
b11 W"
b11 ["
b11 _"
b11 b"
b11 e"
b11 h"
b11 k"
b11 n"
b11 q"
b11 t"
b11 w"
b11 @#
b1100010000000000000000 c
b1100010000000000000000 ("
b1100010000000000000000 G"
b11 B
b11 5#
b11 ?#
b10 C
b10 F"
b10 J"
b10 M"
b10 P"
b10 T"
b10 X"
b10 \"
b10 `"
b10 c"
b10 f"
b10 i"
b10 l"
b10 o"
b10 r"
b10 u"
b10 x"
b10 2#
14
b100000 |"
b1000000010101100000 ##
b10000000101 *#
b100000 %#
b100000 ,#
b1100000 (#
b1000000010 &#
b101 7#
b1100 6#
x1
xD
03
0V
0Q
0`
0O
0M
16
0F
1H
1J
b0 d
b0 w
b0 5"
b1 ;
b1 g
b1 ~
b11 \
b11 i
b11 y
b11 4#
b10 ^
b10 x
b10 1#
b100 ?
b100 |
b100 0#
b1000 <
b1000 }
b1000 '"
b1100010000000000000000 /
b1100010000000000000000 {
b1000 @
b1000 r
b1000 %"
b1100 =
b1100 q
b1100 &"
b1000000010101100000000010110011 X
b1000000010101100000000010110011 $"
b1000000010101100000000010110011 y"
b1000000010101100000000010110011 "#
#390
b101 U
b101 j
b101 )"
b110 A"
b110 Q"
b101 c
b101 ("
b101 G"
b1 6"
b1 v"
b11 ="
b11 a"
b10 C"
b10 K"
b10000 :"
b10000 j"
b10 ;"
b10 g"
b10 <"
b10 d"
b110 ^"
b110 Z"
b110 V"
b110 R"
b101 D"
b101 H"
#400
0&
b11000101110001000110011 '
b11000101110001000110011 +
b11000101110001000110011 !"
b1100 (
b1100 ,
b1100 ""
b1100 3"
#410
b10000 >
b10000 #"
b10000 4"
#450
1&
#470
b11000101110000000000000 0
b11000101110000000000000 s
b11000101110000000000000 /#
b11000101110000000000000 3#
b110 ]
b110 t
b110 9#
b110 =#
b101 _
b101 u
b101 8#
b101 <#
04
b110 e
b110 v
b110 z"
b0 |"
b110 {"
b11000101110 ##
b110 *#
b0 %#
b100 $#
0-#
b0 ,#
b10 +#
b101110 (#
0'#
b11 &#
b100 p
b110 o
b110 7#
b101 6#
b11111111111111111111111111111011 A
b11111111111111111111111111111011 E"
b11111111111111111111111111111011 I"
b11111111111111111111111111111011 L"
b11111111111111111111111111111011 O"
b11111111111111111111111111111011 S"
b11111111111111111111111111111011 W"
b11111111111111111111111111111011 ["
b11111111111111111111111111111011 _"
b11111111111111111111111111111011 b"
b11111111111111111111111111111011 e"
b11111111111111111111111111111011 h"
b11111111111111111111111111111011 k"
b11111111111111111111111111111011 n"
b11111111111111111111111111111011 q"
b11111111111111111111111111111011 t"
b11111111111111111111111111111011 w"
b11111111111111111111111111111011 @#
b101 B
b101 5#
b101 ?#
b1100 C
b1100 F"
b1100 J"
b1100 M"
b1100 P"
b1100 T"
b1100 X"
b1100 \"
b1100 `"
b1100 c"
b1100 f"
b1100 i"
b1100 l"
b1100 o"
b1100 r"
b1100 u"
b1100 x"
b1100 2#
b101 $
b101 f
b1100 @
b1100 r
b1100 %"
b10000 =
b10000 q
b10000 &"
b11000101110001000110011 X
b11000101110001000110011 $"
b11000101110001000110011 y"
b11000101110001000110011 "#
13
b101 \
b101 i
b101 y
b101 4#
b1100 ^
b1100 x
b1100 1#
b1000 ?
b1000 |
b1000 0#
b1100 <
b1100 }
b1100 '"
b1000000010101100000000000000000 /
b1000000010101100000000000000000 {
b1 :
b1 n
b1 ,"
b11 !
b11 L
b11 l
b101 T
b101 k
b101 *"
15
0E
0"
0#
#490
b111 U
b111 j
b111 )"
b1011 >"
b1011 ]"
b1011 ?"
b1011 Y"
b11111111111111111111111111111111 @"
b11111111111111111111111111111111 U"
b11111111111111111111111111000100 A"
b11111111111111111111111111000100 Q"
b111 c
b111 ("
b111 G"
b11111111111111111111111111110111 6"
b11111111111111111111111111110111 v"
b0 9"
b0 m"
b11111111111111111111111111111111 ="
b11111111111111111111111111111111 a"
b1000 C"
b1000 K"
b0 :"
b0 j"
b1100 ;"
b1100 g"
b101111111111111111111111111111000100 ^"
b101111111111111111111111111111000100 Z"
b1111111111111111111111111111111111111111111111111111111111000100 V"
b101111111111111111111111111111000100 R"
b111 D"
b111 H"
#500
0&
b100101000111001110110011 '
b100101000111001110110011 +
b100101000111001110110011 !"
b10000 (
b10000 ,
b10000 ""
b10000 3"
#510
b10100 >
b10100 #"
b10100 4"
#550
1&
#570
b11111111111111111111111111111111 U
b11111111111111111111111111111111 j
b11111111111111111111111111111111 )"
b100101000111000000000000 0
b100101000111000000000000 s
b100101000111000000000000 /#
b100101000111000000000000 3#
b1001 ]
b1001 t
b1001 9#
b1001 =#
b1000 _
b1000 u
b1000 8#
b1000 <#
b101 2
b101 2"
b101 ;#
b111 $
b111 f
b110 A
b110 E"
b110 I"
b110 L"
b110 O"
b110 S"
b110 W"
b110 ["
b110 _"
b110 b"
b110 e"
b110 h"
b110 k"
b110 n"
b110 q"
b110 t"
b110 w"
b110 @#
b11111111111111111111111111111111 c
b11111111111111111111111111111111 ("
b11111111111111111111111111111111 G"
b110 B
b110 5#
b110 ?#
b101 C
b101 F"
b101 J"
b101 M"
b101 P"
b101 T"
b101 X"
b101 \"
b101 `"
b101 c"
b101 f"
b101 i"
b101 l"
b101 o"
b101 r"
b101 u"
b101 x"
b101 2#
b111 e
b111 v
b111 z"
b111 {"
b100101000111 ##
b1001 *#
b111 $#
1-#
b11 +#
b1000111 (#
1'#
b100 &#
b111 p
b111 o
b1001 7#
b1000 6#
b1 9
b1 /"
b101 S
b101 -"
b101 0"
11
0D
b101 !
b101 L
b101 l
b111 T
b111 k
b111 *"
03
b110 d
b110 w
b110 5"
b100 ;
b100 g
b100 ~
b110 [
b110 h
b110 z
b110 \
b110 i
b110 y
b110 4#
b101 ^
b101 x
b101 1#
b1100 ?
b1100 |
b1100 0#
b10000 <
b10000 }
b10000 '"
b11000101110000000000000 /
b11000101110000000000000 {
b10000 @
b10000 r
b10000 %"
b10100 =
b10100 q
b10100 &"
b100101000111001110110011 X
b100101000111001110110011 $"
b100101000111001110110011 y"
b100101000111001110110011 "#
#590
b111 U
b111 j
b111 )"
b0 >"
b0 ]"
b0 ?"
b0 Y"
b0 @"
b0 U"
b11110 A"
b11110 Q"
b111 c
b111 ("
b111 G"
b1 9"
b1 m"
b11 6"
b11 v"
b111 ="
b111 a"
b100 C"
b100 K"
b101000000 :"
b101000000 j"
b101 ;"
b101 g"
b101 <"
b101 d"
b11110 ^"
b11110 Z"
b11110 V"
b11110 R"
b1011 D"
b1011 H"
#600
0&
b110001011100010100110011 '
b110001011100010100110011 +
b110001011100010100110011 !"
b10100 (
b10100 ,
b10100 ""
b10100 3"
#610
b11000 >
b11000 #"
b11000 4"
#650
1&
#670
b110001011100000000000000 0
b110001011100000000000000 s
b110001011100000000000000 /#
b110001011100000000000000 3#
b1100 ]
b1100 t
b1100 9#
b1100 =#
b1011 _
b1011 u
b1011 8#
b1011 <#
b100 U
b100 j
b100 )"
b1001 A
b1001 E"
b1001 I"
b1001 L"
b1001 O"
b1001 S"
b1001 W"
b1001 ["
b1001 _"
b1001 b"
b1001 e"
b1001 h"
b1001 k"
b1001 n"
b1001 q"
b1001 t"
b1001 w"
b1001 @#
b100 e
b100 v
b100 z"
b100 {"
b110001011100 ##
b1100 *#
b1010 $#
0-#
b101 +#
b1011100 (#
0'#
b110 &#
b1010 p
b100 o
b1100 7#
b1011 6#
b100 c
b100 ("
b100 G"
b1001 B
b1001 5#
b1001 ?#
b1000 C
b1000 F"
b1000 J"
b1000 M"
b1000 P"
b1000 T"
b1000 X"
b1000 \"
b1000 `"
b1000 c"
b1000 f"
b1000 i"
b1000 l"
b1000 o"
b1000 r"
b1000 u"
b1000 x"
b1000 2#
b111 2
b111 2"
b111 ;#
b10100 @
b10100 r
b10100 %"
b11000 =
b11000 q
b11000 &"
b110001011100010100110011 X
b110001011100010100110011 $"
b110001011100010100110011 y"
b110001011100010100110011 "#
b111 d
b111 w
b111 5"
b111 ;
b111 g
b111 ~
b111 [
b111 h
b111 z
b1001 \
b1001 i
b1001 y
b1001 4#
b1000 ^
b1000 x
b1000 1#
b10000 ?
b10000 |
b10000 0#
b10100 <
b10100 }
b10100 '"
b100101000111000000000000 /
b100101000111000000000000 {
b100 :
b100 n
b100 ,"
b110 Z
b110 m
b110 !
b110 L
b110 l
b111 S
b111 -"
b111 0"
#690
b1000 U
b1000 j
b1000 )"
b1001000 A"
b1001000 Q"
b1000 c
b1000 ("
b1000 G"
b1 6"
b1 v"
b1001 ="
b1001 a"
b1000 C"
b1000 K"
b1000000000000 :"
b1000000000000 j"
b1000 ;"
b1000 g"
b1000 <"
b1000 d"
b1001000 ^"
b1001000 Z"
b1001000 V"
b1001000 R"
b10001 D"
b10001 H"
#700
0&
b101001110000011010010011 '
b101001110000011010010011 +
b101001110000011010010011 !"
b11000 (
b11000 ,
b11000 ""
b11000 3"
#710
b11100 >
b11100 #"
b11100 4"
#750
1&
#770
b1 U
b1 j
b1 )"
b1100 A
b1100 E"
b1100 I"
b1100 L"
b1100 O"
b1100 S"
b1100 W"
b1100 ["
b1100 _"
b1100 b"
b1100 e"
b1100 h"
b1100 k"
b1100 n"
b1100 q"
b1100 t"
b1100 w"
b1100 @#
b1010 0
b1010 s
b1010 /#
b1010 3#
b1010 ]
b1010 t
b1010 9#
b1010 =#
b1110 _
b1110 u
b1110 8#
b1110 <#
b1000 $
b1000 f
b1 c
b1 ("
b1 G"
b1100 B
b1100 5#
b1100 ?#
b1011 C
b1011 F"
b1011 J"
b1011 M"
b1011 P"
b1011 T"
b1011 X"
b1011 \"
b1011 `"
b1011 c"
b1011 f"
b1011 i"
b1011 l"
b1011 o"
b1011 r"
b1011 u"
b1011 x"
b1011 2#
b1 Y
b1 }"
b1 !#
0I
b0 e
b0 v
b0 z"
b0 {"
b10011 ~"
b101001110000 ##
b1010 *#
b1101 $#
1-#
b110 +#
b1110000 (#
b101 &#
b1101 p
b0 o
b1010 7#
b1110 6#
b100 9
b100 /"
b111 :
b111 n
b111 ,"
b111 Z
b111 m
b1001 !
b1001 L
b1001 l
b1000 T
b1000 k
b1000 *"
b100 d
b100 w
b100 5"
b1010 ;
b1010 g
b1010 ~
b100 [
b100 h
b100 z
b1100 \
b1100 i
b1100 y
b1100 4#
b1011 ^
b1011 x
b1011 1#
b10100 ?
b10100 |
b10100 0#
b11000 <
b11000 }
b11000 '"
b110001011100000000000000 /
b110001011100000000000000 {
b11000 @
b11000 r
b11000 %"
b11100 =
b11100 q
b11100 &"
b101001110000011010010011 X
b101001110000011010010011 $"
b101001110000011010010011 y"
b101001110000011010010011 "#
#790
b111 U
b111 j
b111 )"
b10000100 A"
b10000100 Q"
b111 c
b111 ("
b111 G"
b111 6"
b111 v"
b1111 ="
b1111 a"
b1011000000000000 :"
b1011000000000000 j"
b1011 ;"
b1011 g"
b1011 <"
b1011 d"
b10000100 ^"
b10000100 Z"
b10000100 V"
b10000100 R"
b10111 D"
b10111 H"
#800
0&
#850
1&
#870
b10111 U
b10111 j
b10111 )"
b1010 A
b1010 E"
b1010 I"
b1010 L"
b1010 O"
b1010 S"
b1010 W"
b1010 ["
b1010 _"
b1010 b"
b1010 e"
b1010 h"
b1010 k"
b1010 n"
b1010 q"
b1010 t"
b1010 w"
b1010 @#
b10111 c
b10111 ("
b10111 G"
b1010 B
b1010 5#
b1010 ?#
b1110 C
b1110 F"
b1110 J"
b1110 M"
b1110 P"
b1110 T"
b1110 X"
b1110 \"
b1110 `"
b1110 c"
b1110 f"
b1110 i"
b1110 l"
b1110 o"
b1110 r"
b1110 u"
b1110 x"
b1110 2#
b111 $
b111 f
b1000 2
b1000 2"
b1000 ;#
0H
b0 d
b0 w
b0 5"
b1101 ;
b1101 g
b1101 ~
b0 [
b0 h
b0 z
b1010 \
b1010 i
b1010 y
b1010 4#
b1110 ^
b1110 x
b1110 1#
b11000 ?
b11000 |
b11000 0#
b11100 <
b11100 }
b11100 '"
b1010 /
b1010 {
b1010 :
b1010 n
b1010 ,"
b100 Z
b100 m
b1100 !
b1100 L
b1100 l
b111 T
b111 k
b111 *"
b111 9
b111 /"
b1000 S
b1000 -"
b1000 0"
#890
b11000 U
b11000 j
b11000 )"
b10001100 A"
b10001100 Q"
b11000 c
b11000 ("
b11000 G"
b100 6"
b100 v"
b0 8"
b0 p"
b0 9"
b0 m"
b1110 ="
b1110 a"
b1010 C"
b1010 K"
b11100000000000 :"
b11100000000000 j"
b100 ;"
b100 g"
b100 <"
b100 d"
b10001100 ^"
b10001100 Z"
b10001100 V"
b10001100 R"
b1 B"
b1 N"
b11000 D"
b11000 H"
#900
0&
#950
1&
#970
b111 2
b111 2"
b111 ;#
b11000 $
b11000 f
b1010 9
b1010 /"
b111 S
b111 -"
b111 0"
b1101 :
b1101 n
b1101 ,"
b0 Z
b0 m
b1010 !
b1010 L
b1010 l
b11000 T
b11000 k
b11000 *"
#1000
0&
#1050
1&
#1070
b11000 2
b11000 2"
b11000 ;#
b1101 9
b1101 /"
b11000 S
b11000 -"
b11000 0"
#1100
0&
#1150
1&
#1200
0&
#1250
1&
#1300
0&
#1350
1&
#1400
0&
#1450
1&
#1500
0&
#1550
1&
#1600
0&
#1650
1&
#1700
0&
