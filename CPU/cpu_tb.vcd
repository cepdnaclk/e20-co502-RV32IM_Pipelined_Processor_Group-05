$date
	Sun Feb 09 02:31:34 2025
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 ! \REGISTER_FILE[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 " \REGISTER_FILE[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 # \REGISTER_FILE[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 $ \REGISTER_FILE[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 % \REGISTER_FILE[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 & \REGISTER_FILE[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 ' \REGISTER_FILE[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 ( \REGISTER_FILE[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 ) \REGISTER_FILE[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 * \REGISTER_FILE[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 + \REGISTER_FILE[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 , \REGISTER_FILE[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 - \REGISTER_FILE[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 . \REGISTER_FILE[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 / \REGISTER_FILE[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 0 \REGISTER_FILE[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 1 \REGISTER_FILE[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 2 \REGISTER_FILE[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 3 \REGISTER_FILE[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 4 \REGISTER_FILE[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 5 \REGISTER_FILE[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 6 \REGISTER_FILE[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 7 \REGISTER_FILE[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 8 \REGISTER_FILE[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 9 \REGISTER_FILE[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 : \REGISTER_FILE[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 ; \REGISTER_FILE[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 < \REGISTER_FILE[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 = \REGISTER_FILE[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 > \REGISTER_FILE[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 ? \REGISTER_FILE[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module regfile $end
$var reg 32 @ \REGISTER_FILE[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$var wire 32 A MEM_WRITE_DATA [31:0] $end
$var wire 1 B MEM_WRITE $end
$var wire 1 C MEM_READ $end
$var wire 32 D MEM_ADDRESS [31:0] $end
$var wire 3 E FUNC3 [2:0] $end
$var reg 1 F BUSYWAIT $end
$var reg 1 G CLK $end
$var reg 32 H INSTRUCTION [31:0] $end
$var reg 32 I PC [31:0] $end
$var reg 32 J READ_DATA [31:0] $end
$var reg 1 K RESET $end
$scope module cpu $end
$var wire 1 F BUSYWAIT $end
$var wire 1 G CLK $end
$var wire 32 L INSTRUCTION [31:0] $end
$var wire 32 M PC [31:0] $end
$var wire 32 N READ_DATA [31:0] $end
$var wire 1 K RESET $end
$var wire 32 O extended_imm_value_out [31:0] $end
$var wire 32 P extended_imm_value [31:0] $end
$var wire 1 Q WRITE_ENABLE $end
$var wire 32 R WRITE_DATA [31:0] $end
$var wire 5 S WB_ADDRESS [4:0] $end
$var wire 1 T TWOSCOMP_OUT $end
$var wire 1 U TWOSCOMP $end
$var wire 1 V REGWRITE_ENABLE_OUT2 $end
$var wire 1 W REGWRITE_ENABLE_OUT $end
$var wire 1 X REGWRITE_ENABLE $end
$var wire 32 Y READ_DATA_OUT [31:0] $end
$var wire 5 Z RD_OUT2 [4:0] $end
$var wire 5 [ RD_OUT [4:0] $end
$var wire 32 \ PC_PLUS_FOUR_OUT2 [31:0] $end
$var wire 32 ] PC_PLUS_FOUR_OUT [31:0] $end
$var wire 32 ^ PC_PLUS_FOUR [31:0] $end
$var wire 32 _ PC_OUT2 [31:0] $end
$var wire 32 ` PC_OUT [31:0] $end
$var wire 32 a OUT2_TWOSCOMP [31:0] $end
$var wire 32 b OUT2 [31:0] $end
$var wire 32 c OUT1 [31:0] $end
$var wire 1 d MUX3_SELECT_OUT3 $end
$var wire 1 e MUX3_SELECT_OUT2 $end
$var wire 1 f MUX3_SELECT_OUT $end
$var wire 1 g MUX3_SELECT $end
$var wire 1 h MUX2_SELECT_OUT $end
$var wire 1 i MUX2_SELECT $end
$var wire 1 j MUX1_SELECT_OUT $end
$var wire 1 k MUX1_SELECT $end
$var wire 32 l MEM_WRITE_DATA [31:0] $end
$var wire 1 B MEM_WRITE $end
$var wire 1 C MEM_READ $end
$var wire 1 m MEMWRITE_OUT $end
$var wire 1 n MEMWRITE $end
$var wire 1 o MEMREAD_OUT $end
$var wire 1 p MEMREAD $end
$var wire 1 q JUMP_OUT $end
$var wire 1 r JUMP $end
$var wire 32 s JAL_RESULT3 [31:0] $end
$var wire 32 t JAL_RESULT2 [31:0] $end
$var wire 32 u JAL_RESULT [31:0] $end
$var wire 1 v JAL_OUT $end
$var wire 1 w JAL $end
$var wire 32 x INSTRUCTION_OUT [31:0] $end
$var wire 3 y IMMEDIATE [2:0] $end
$var wire 3 z FUNC3_OUT [2:0] $end
$var wire 3 { FUNC3 [2:0] $end
$var wire 32 | DATA2_OUT [31:0] $end
$var wire 32 } DATA2 [31:0] $end
$var wire 32 ~ DATA1_OUT [31:0] $end
$var wire 32 !" DATA1 [31:0] $end
$var wire 1 "" BRANCH_OUT $end
$var wire 1 #" BRANCH $end
$var wire 1 $" ALU_ZERO $end
$var wire 32 %" ALU_RESULT [31:0] $end
$var wire 5 &" ALUOP_OUT [4:0] $end
$var wire 5 '" ALUOP [4:0] $end
$var reg 32 (" MEM_ADDRESS [31:0] $end
$scope module EX_MEMREG $end
$var wire 1 F BUSYWAIT $end
$var wire 1 G CLK $end
$var wire 1 K RESET $end
$var wire 1 W REGWRITE_ENABLE_IN $end
$var wire 5 )" RD_IN [4:0] $end
$var wire 1 f MUX3_SELECT_IN $end
$var wire 1 m MEM_WRITE_IN $end
$var wire 1 o MEM_READ_IN $end
$var wire 3 *" FUNC3_IN [2:0] $end
$var wire 32 +" DATA2_IN [31:0] $end
$var wire 32 ," ALUUD_IN [31:0] $end
$var reg 32 -" ALUUD_OUT [31:0] $end
$var reg 32 ." DATA2_OUT [31:0] $end
$var reg 3 /" FUNC3_OUT [2:0] $end
$var reg 1 C MEM_READ_OUT $end
$var reg 1 B MEM_WRITE_OUT $end
$var reg 1 e MUX3_SELECT_OUT $end
$var reg 5 0" RD_OUT [4:0] $end
$var reg 1 V REGWRITE_ENABLE_OUT $end
$upscope $end
$scope module ID_EXREG $end
$var wire 1 F BUSYWAIT $end
$var wire 1 G CLK $end
$var wire 3 1" FUNC3_IN [2:0] $end
$var wire 5 2" RD_IN [4:0] $end
$var wire 1 K RESET $end
$var wire 1 U TWOSCOMP_IN $end
$var wire 1 X REGWRITE_IN $end
$var wire 32 3" PC_PLUS_FOUR_IN [31:0] $end
$var wire 32 4" PC_IN [31:0] $end
$var wire 1 g MUX3_IN $end
$var wire 1 i MUX2_IN $end
$var wire 1 k MUX1_IN $end
$var wire 1 n MEMWRITE_IN $end
$var wire 1 p MEMREAD_IN $end
$var wire 1 r JUMP_IN $end
$var wire 1 w JAL_IN $end
$var wire 32 5" IMM_IN [31:0] $end
$var wire 32 6" DATA2_IN [31:0] $end
$var wire 32 7" DATA1_IN [31:0] $end
$var wire 1 #" BRANCH_IN $end
$var wire 5 8" ALU_IN [4:0] $end
$var reg 5 9" ALU_OUT [4:0] $end
$var reg 1 "" BRANCH_OUT $end
$var reg 32 :" DATA1_OUT [31:0] $end
$var reg 32 ;" DATA2_OUT [31:0] $end
$var reg 3 <" FUNC3_OUT [2:0] $end
$var reg 32 =" IMM_OUT [31:0] $end
$var reg 1 v JAL_OUT $end
$var reg 1 q JUMP_OUT $end
$var reg 1 o MEMREAD_OUT $end
$var reg 1 m MEMWRITE_OUT $end
$var reg 1 j MUX1_OUT $end
$var reg 1 h MUX2_OUT $end
$var reg 1 f MUX3_OUT $end
$var reg 32 >" PC_OUT [31:0] $end
$var reg 32 ?" PC_PLUS_FOUR_OUT [31:0] $end
$var reg 5 @" RD_OUT [4:0] $end
$var reg 1 W REGWRITE_OUT $end
$var reg 1 T TWOSCOMP_OUT $end
$upscope $end
$scope module IF_IDREG $end
$var wire 1 F BUSYWAIT $end
$var wire 1 G CLK $end
$var wire 32 A" INSTRUCTION_IN [31:0] $end
$var wire 32 B" PC_IN [31:0] $end
$var wire 1 K RESET $end
$var wire 32 C" PC_PLUS_FOUR_IN [31:0] $end
$var reg 32 D" INSTRUCTION_OUT [31:0] $end
$var reg 32 E" PC_OUT [31:0] $end
$var reg 32 F" PC_PLUS_FOUR_OUT [31:0] $end
$upscope $end
$scope module JAL_MUX $end
$var wire 32 G" IN1 [31:0] $end
$var wire 1 v SELECT $end
$var wire 32 H" IN0 [31:0] $end
$var reg 32 I" OUT [31:0] $end
$upscope $end
$scope module MEM_WBREG $end
$var wire 32 J" ALUOUT_IN [31:0] $end
$var wire 1 F BUSYWAIT $end
$var wire 1 G CLK $end
$var wire 32 K" MEM_IN [31:0] $end
$var wire 1 e MUX3_SELECT_IN $end
$var wire 5 L" RD_IN [4:0] $end
$var wire 1 V REGWRITE_ENABLE_IN $end
$var wire 1 K RESET $end
$var reg 32 M" ALUOUT_OUT [31:0] $end
$var reg 32 N" MEM_OUT [31:0] $end
$var reg 1 d MUX3_SELECT_OUT $end
$var reg 5 O" RD_OUT [4:0] $end
$var reg 1 Q REGWRITE_ENABLE_OUT $end
$upscope $end
$scope module MUX3 $end
$var wire 32 P" IN0 [31:0] $end
$var wire 32 Q" IN1 [31:0] $end
$var wire 1 d SELECT $end
$var reg 32 R" OUT [31:0] $end
$upscope $end
$scope module adder $end
$var wire 32 S" IN1 [31:0] $end
$var wire 32 T" OUT [31:0] $end
$upscope $end
$scope module alu $end
$var wire 5 U" SELECT [4:0] $end
$var wire 32 V" Result_xor [31:0] $end
$var wire 32 W" Result_srl [31:0] $end
$var wire 32 X" Result_sltu [31:0] $end
$var wire 32 Y" Result_slt [31:0] $end
$var wire 32 Z" Result_sll [31:0] $end
$var wire 32 [" Result_remu [31:0] $end
$var wire 32 \" Result_rem [31:0] $end
$var wire 32 ]" Result_or [31:0] $end
$var wire 32 ^" Result_mulhu [31:0] $end
$var wire 32 _" Result_mulhsu [31:0] $end
$var wire 32 `" Result_mulh [31:0] $end
$var wire 32 a" Result_mul [31:0] $end
$var wire 32 b" Result_div [31:0] $end
$var wire 32 c" Result_and [31:0] $end
$var wire 32 d" Result_add [31:0] $end
$var wire 32 e" DATA2 [31:0] $end
$var wire 32 f" DATA1 [31:0] $end
$var reg 32 g" RESULT [31:0] $end
$var reg 1 $" ZERO $end
$scope module add0 $end
$var wire 32 h" result [31:0] $end
$var wire 32 i" operand_B [31:0] $end
$var wire 32 j" operand_A [31:0] $end
$upscope $end
$scope module and0 $end
$var wire 32 k" result [31:0] $end
$var wire 32 l" operand_B [31:0] $end
$var wire 32 m" operand_A [31:0] $end
$upscope $end
$scope module div0 $end
$var wire 32 n" result [31:0] $end
$var wire 32 o" operand_B [31:0] $end
$var wire 32 p" operand_A [31:0] $end
$upscope $end
$scope module mul0 $end
$var wire 32 q" result [31:0] $end
$var wire 64 r" product [63:0] $end
$var wire 32 s" operand_B [31:0] $end
$var wire 32 t" operand_A [31:0] $end
$upscope $end
$scope module mulh0 $end
$var wire 32 u" result [31:0] $end
$var wire 64 v" product [63:0] $end
$var wire 32 w" operand_B [31:0] $end
$var wire 32 x" operand_A [31:0] $end
$upscope $end
$scope module mulhsu0 $end
$var wire 32 y" result [31:0] $end
$var wire 64 z" product [63:0] $end
$var wire 32 {" operand_B [31:0] $end
$var wire 32 |" operand_A [31:0] $end
$upscope $end
$scope module mulhu0 $end
$var wire 32 }" result [31:0] $end
$var wire 64 ~" product [63:0] $end
$var wire 32 !# operand_B [31:0] $end
$var wire 32 "# operand_A [31:0] $end
$upscope $end
$scope module or0 $end
$var wire 32 ## result [31:0] $end
$var wire 32 $# operand_B [31:0] $end
$var wire 32 %# operand_A [31:0] $end
$upscope $end
$scope module rem0 $end
$var wire 32 &# result [31:0] $end
$var wire 32 '# operand_B [31:0] $end
$var wire 32 (# operand_A [31:0] $end
$upscope $end
$scope module remu0 $end
$var wire 32 )# result [31:0] $end
$var wire 32 *# operand_B [31:0] $end
$var wire 32 +# operand_A [31:0] $end
$upscope $end
$scope module sll0 $end
$var wire 32 ,# result [31:0] $end
$var wire 32 -# operand_B [31:0] $end
$var wire 32 .# operand_A [31:0] $end
$upscope $end
$scope module slt0 $end
$var wire 32 /# result [31:0] $end
$var wire 32 0# operand_B [31:0] $end
$var wire 32 1# operand_A [31:0] $end
$upscope $end
$scope module sltu0 $end
$var wire 32 2# result [31:0] $end
$var wire 32 3# operand_B [31:0] $end
$var wire 32 4# operand_A [31:0] $end
$upscope $end
$scope module srl0 $end
$var wire 32 5# result [31:0] $end
$var wire 32 6# operand_B [31:0] $end
$var wire 32 7# operand_A [31:0] $end
$upscope $end
$scope module xor0 $end
$var wire 32 8# result [31:0] $end
$var wire 32 9# operand_B [31:0] $end
$var wire 32 :# operand_A [31:0] $end
$upscope $end
$upscope $end
$scope module cu $end
$var wire 32 ;# INSTRUCTION [31:0] $end
$var reg 5 <# ALUOP [4:0] $end
$var reg 1 #" BRANCH $end
$var reg 3 =# FUNCT3 [2:0] $end
$var reg 7 ># FUNCT7 [6:0] $end
$var reg 3 ?# IMMEDIATE [2:0] $end
$var reg 1 w JAL $end
$var reg 1 r JUMP $end
$var reg 1 p MEMORYREAD $end
$var reg 1 n MEMORYWRITE $end
$var reg 1 k MUX1 $end
$var reg 1 i MUX2 $end
$var reg 1 g MUX3 $end
$var reg 8 @# OPCODE [7:0] $end
$var reg 1 X REGISTERWRITE $end
$var reg 1 U TWOSCOMP $end
$upscope $end
$scope module immex $end
$var wire 3 A# imm_select [2:0] $end
$var wire 32 B# imm_value [31:0] $end
$var wire 20 C# U_imm [19:0] $end
$var wire 5 D# S_imm_2 [4:0] $end
$var wire 7 E# S_imm_1 [6:0] $end
$var wire 10 F# J_imm_4 [9:0] $end
$var wire 1 G# J_imm_3 $end
$var wire 8 H# J_imm_2 [7:0] $end
$var wire 1 I# J_imm_1 $end
$var wire 12 J# I_imm [11:0] $end
$var wire 4 K# B_imm_4 [3:0] $end
$var wire 6 L# B_imm_3 [5:0] $end
$var wire 1 M# B_imm_2 $end
$var wire 1 N# B_imm_1 $end
$var reg 32 O# extended_imm_value [31:0] $end
$upscope $end
$scope module mux1 $end
$var wire 32 P# IN0 [31:0] $end
$var wire 32 Q# IN1 [31:0] $end
$var wire 1 j SELECT $end
$var reg 32 R# OUT [31:0] $end
$upscope $end
$scope module mux2 $end
$var wire 32 S# IN0 [31:0] $end
$var wire 32 T# IN1 [31:0] $end
$var wire 1 h SELECT $end
$var reg 32 U# OUT [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 5 V# ADRS1 [4:0] $end
$var wire 5 W# ADRS2 [4:0] $end
$var wire 1 G CLK $end
$var wire 32 X# DATA_OUT1 [31:0] $end
$var wire 32 Y# DATA_OUT2 [31:0] $end
$var wire 1 K RESET $end
$var wire 5 Z# WB_ADDRESS [4:0] $end
$var wire 32 [# WRITE_DATA [31:0] $end
$var wire 1 Q WRITE_ENABLE $end
$var reg 32 \# DATA1 [31:0] $end
$var reg 32 ]# DATA2 [31:0] $end
$var integer 32 ^# i [31:0] $end
$upscope $end
$scope module twos_complement $end
$var wire 32 _# DATA2 [31:0] $end
$var wire 1 T select $end
$var reg 32 `# DATA2_OUT [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx `#
bx _#
b100000 ^#
bx ]#
bx \#
bx [#
bx Z#
bx Y#
bx X#
bx W#
bx V#
bx U#
b0 T#
bx S#
b0 R#
b0 Q#
b0 P#
bx O#
xN#
xM#
bx L#
bx K#
bx J#
xI#
bx H#
xG#
bx F#
bx E#
bx D#
bx C#
bx B#
bx A#
bx @#
bx ?#
bx >#
bx =#
bx <#
bx ;#
b0 :#
bx 9#
bx 8#
b0 7#
bx 6#
bx 5#
b0 4#
bx 3#
bx 2#
b0 1#
bx 0#
bx /#
b0 .#
bx -#
bx ,#
b0 +#
bx *#
bx )#
b0 (#
bx '#
bx &#
b0 %#
bx $#
bx ##
b0 "#
bx !#
bx ~"
bx }"
b0 |"
bx {"
bx z"
bx y"
b0 x"
bx w"
bx v"
bx u"
b0 t"
bx s"
bx r"
bx q"
b0 p"
bx o"
bx n"
b0 m"
bx l"
bx k"
b0 j"
bx i"
bx h"
bx g"
b0 f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
b0 U"
bx T"
b0 S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
b0 K"
bx J"
bx I"
bx H"
b0 G"
bx F"
bx E"
bx D"
bx C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
b0 +"
b0 *"
b0 )"
bx ("
bx '"
b0 &"
bx %"
x$"
x#"
0""
bx !"
b0 ~
bx }
b0 |
bx {
b0 z
bx y
bx x
xw
0v
bx u
bx t
bx s
xr
0q
xp
0o
xn
0m
bx l
xk
0j
xi
0h
xg
0f
xe
xd
b0 c
bx b
bx a
bx `
b0 _
bx ^
bx ]
b0 \
b0 [
bx Z
bx Y
xX
0W
xV
xU
0T
bx S
bx R
xQ
bx P
b0 O
b0 N
b0 M
b0 L
1K
b0 J
b0 I
b0 H
0G
0F
bx E
bx D
xC
xB
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#10
b100 ^
b100 C"
b100 T"
#20
b0 c"
b0 k"
b0x X"
b0x 2#
b0x Y"
b0x /#
#50
b0 }
b0 6"
b0 Y#
b0 ]#
b0 !"
b0 7"
b0 X#
b0 \#
b11111 @
b11110 ?
b11101 >
b11100 =
b11011 <
b11010 ;
b11001 :
b11000 9
b10111 8
b10110 7
b10101 6
b10100 5
b10011 4
b10010 3
b10001 2
b10000 1
b1111 0
b1110 /
b1101 .
b1100 -
b1011 ,
b1010 +
b1001 *
b1000 )
b111 (
b110 '
b101 &
b100 %
b11 $
b10 #
b1 "
b0 !
b0 a
b0 e"
b0 i"
b0 l"
b0 o"
b0 s"
b0 w"
b0 {"
b0 !#
b0 $#
b0 '#
b0 *#
b0 -#
b0 0#
b0 3#
b0 6#
b0 9#
b0 `#
b0 b
b0 U#
b0 _#
b0 P
b0 5"
b0 O#
b0 S#
b0 >#
b0 =#
b0 @#
b0 C#
b0 J#
b0 E#
b0 D#
0N#
0M#
b0 L#
b0 K#
0I#
b0 H#
0G#
b0 F#
b0 2"
b0 1"
b0 W#
b0 V#
b0 D
b0 ("
b0 R
b0 R"
b0 [#
b0 x
b0 D"
b0 ;#
b0 B#
b0 ]
b0 3"
b0 F"
b0 `
b0 4"
b0 E"
b100000 ^#
b0 Z
b0 0"
b0 L"
b0 E
b0 {
b0 /"
b0 A
b0 l
b0 ."
b0 t
b0 -"
b0 J"
0V
0e
0C
b0 S
b0 O"
b0 Z#
b0 Y
b0 N"
b0 Q"
b0 s
b0 M"
b0 P"
0Q
0d
1G
#70
b0 u
b0 ,"
b0 I"
b0 ^"
b0 }"
b0 _"
b0 y"
b0 `"
b0 u"
b0 a"
b0 q"
1$"
b0 %"
b0 H"
b0 g"
b0 V"
b0 8#
b0 X"
b0 2#
b0 Y"
b0 /#
b0 ]"
b0 ##
b0 W"
b0 5#
b0 Z"
b0 ,#
b0 ~"
b0 z"
b0 v"
b0 r"
b0 d"
b0 h"
#100
0G
0K
#150
1G
#170
0B
xT
xv
xq
x""
xo
xm
xW
xf
xh
xj
bx &"
bx 9"
bx U"
b100 ]
b100 3"
b100 F"
#200
0G
b1100010000000100110011 H
b1100010000000100110011 L
b1100010000000100110011 A"
b100 I
b100 M
b100 B"
b100 S"
#210
b1000 ^
b1000 C"
b1000 T"
#250
1G
#270
b1100010000000000000000 a
b1100010000000000000000 e"
b1100010000000000000000 i"
b1100010000000000000000 l"
b1100010000000000000000 o"
b1100010000000000000000 s"
b1100010000000000000000 w"
b1100010000000000000000 {"
b1100010000000000000000 !#
b1100010000000000000000 $#
b1100010000000000000000 '#
b1100010000000000000000 *#
b1100010000000000000000 -#
b1100010000000000000000 0#
b1100010000000000000000 3#
b1100010000000000000000 6#
b1100010000000000000000 9#
b1100010000000000000000 `#
b1100010000000000000000 b
b1100010000000000000000 U#
b1100010000000000000000 _#
b1100010000000000000000 P
b1100010000000000000000 5"
b1100010000000000000000 O#
b1100010000000000000000 S#
b11 }
b11 6"
b11 Y#
b11 ]#
b10 !"
b10 7"
b10 X#
b10 \#
0U
b0 y
b0 ?#
b0 A#
0w
0r
0#"
0p
0n
1X
0g
1i
1k
b0 '"
b0 8"
b0 <#
b110011 @#
b1100010000 C#
b11 J#
b10 D#
b1 K#
b10000 H#
1G#
b1 F#
b10 2"
b11 W#
b10 V#
b100 `
b100 4"
b100 E"
b1000 ]
b1000 3"
b1000 F"
b1100010000000100110011 x
b1100010000000100110011 D"
b1100010000000100110011 ;#
b1100010000000100110011 B#
b100 \
b100 ?"
b100 G"
xV
xe
xB
xC
#290
b1100010000000000000000 V"
b1100010000000000000000 8#
b1 X"
b1 2#
b1 Y"
b1 /#
b1100010000000000000000 ]"
b1100010000000000000000 ##
b0 ["
b0 )#
b0 \"
b0 &#
b0 b"
b0 n"
b1100010000000000000000 d"
b1100010000000000000000 h"
#300
0G
b1000000010101100000000010110011 H
b1000000010101100000000010110011 L
b1000000010101100000000010110011 A"
b1000 I
b1000 M
b1000 B"
b1000 S"
#310
b1100 ^
b1100 C"
b1100 T"
#350
1G
#370
b1100010000000000000000 u
b1100010000000000000000 ,"
b1100010000000000000000 I"
b1000000010101100000000000000000 P
b1000000010101100000000000000000 5"
b1000000010101100000000000000000 O#
b1000000010101100000000000000000 S#
b101 }
b101 6"
b101 Y#
b101 ]#
b1100 !"
b1100 7"
b1100 X#
b1100 \#
b11 a
b11 e"
b11 i"
b11 l"
b11 o"
b11 s"
b11 w"
b11 {"
b11 !#
b11 $#
b11 '#
b11 *#
b11 -#
b11 0#
b11 3#
b11 6#
b11 9#
b11 `#
b1100010000000000000000 %"
b1100010000000000000000 H"
b1100010000000000000000 g"
b11 b
b11 U#
b11 _#
b10 c
b10 f"
b10 j"
b10 m"
b10 p"
b10 t"
b10 x"
b10 |"
b10 "#
b10 %#
b10 (#
b10 +#
b10 .#
b10 1#
b10 4#
b10 7#
b10 :#
b10 R#
1U
b100000 >#
b1000000010101100000 C#
b10000000101 J#
b100000 E#
b1 D#
1M#
b100000 L#
b0 K#
b1100000 H#
b1000000010 F#
b1 2"
b101 W#
b1100 V#
xQ
xd
0T
0v
0q
0""
0o
0m
1W
0f
1h
1j
b0 &"
b0 9"
b0 U"
b10 [
b10 )"
b10 @"
b11 |
b11 +"
b11 ;"
b11 T#
b10 ~
b10 :"
b10 Q#
b100 _
b100 >"
b100 P#
b1000 \
b1000 ?"
b1000 G"
b1100010000000000000000 O
b1100010000000000000000 ="
b1000 `
b1000 4"
b1000 E"
b1100 ]
b1100 3"
b1100 F"
b1000000010101100000000010110011 x
b1000000010101100000000010110011 D"
b1000000010101100000000010110011 ;#
b1000000010101100000000010110011 B#
#390
b101 u
b101 ,"
b101 I"
b110 a"
b110 q"
b101 %"
b101 H"
b101 g"
b1 V"
b1 8#
b11 ]"
b11 ##
b10 c"
b10 k"
b10000 Z"
b10000 ,#
b10 ["
b10 )#
b10 \"
b10 &#
b110 ~"
b110 z"
b110 v"
b110 r"
b101 d"
b101 h"
#400
0G
b11000101110001000110011 H
b11000101110001000110011 L
b11000101110001000110011 A"
b1100 I
b1100 M
b1100 B"
b1100 S"
#410
b10000 ^
b10000 C"
b10000 T"
#450
1G
#470
b11000101110000000000000 P
b11000101110000000000000 5"
b11000101110000000000000 O#
b11000101110000000000000 S#
b110 }
b110 6"
b110 Y#
b110 ]#
b101 !"
b101 7"
b101 X#
b101 \#
0U
b110 '"
b110 8"
b110 <#
b0 >#
b110 =#
b11000101110 C#
b110 J#
b0 E#
b100 D#
0M#
b0 L#
b10 K#
b101110 H#
0G#
b11 F#
b100 2"
b110 1"
b110 W#
b101 V#
b11111111111111111111111111111011 a
b11111111111111111111111111111011 e"
b11111111111111111111111111111011 i"
b11111111111111111111111111111011 l"
b11111111111111111111111111111011 o"
b11111111111111111111111111111011 s"
b11111111111111111111111111111011 w"
b11111111111111111111111111111011 {"
b11111111111111111111111111111011 !#
b11111111111111111111111111111011 $#
b11111111111111111111111111111011 '#
b11111111111111111111111111111011 *#
b11111111111111111111111111111011 -#
b11111111111111111111111111111011 0#
b11111111111111111111111111111011 3#
b11111111111111111111111111111011 6#
b11111111111111111111111111111011 9#
b11111111111111111111111111111011 `#
b101 b
b101 U#
b101 _#
b1100 c
b1100 f"
b1100 j"
b1100 m"
b1100 p"
b1100 t"
b1100 x"
b1100 |"
b1100 "#
b1100 %#
b1100 (#
b1100 +#
b1100 .#
b1100 1#
b1100 4#
b1100 7#
b1100 :#
b1100 R#
b101 D
b101 ("
b1100 `
b1100 4"
b1100 E"
b10000 ]
b10000 3"
b10000 F"
b11000101110001000110011 x
b11000101110001000110011 D"
b11000101110001000110011 ;#
b11000101110001000110011 B#
1T
b1 [
b1 )"
b1 @"
b101 |
b101 +"
b101 ;"
b101 T#
b1100 ~
b1100 :"
b1100 Q#
b1000 _
b1000 >"
b1000 P#
b1100 \
b1100 ?"
b1100 G"
b1000000010101100000000000000000 O
b1000000010101100000000000000000 ="
b10 Z
b10 0"
b10 L"
b11 A
b11 l
b11 ."
b101 t
b101 -"
b101 J"
1V
0e
0B
0C
#490
b111 u
b111 ,"
b111 I"
b1011 ^"
b1011 }"
b1011 _"
b1011 y"
b11111111111111111111111111111111 `"
b11111111111111111111111111111111 u"
b11111111111111111111111111000100 a"
b11111111111111111111111111000100 q"
b111 %"
b111 H"
b111 g"
b11111111111111111111111111110111 V"
b11111111111111111111111111110111 8#
b0 Y"
b0 /#
b11111111111111111111111111111111 ]"
b11111111111111111111111111111111 ##
b1000 c"
b1000 k"
b0 Z"
b0 ,#
b1100 ["
b1100 )#
b101111111111111111111111111111000100 ~"
b101111111111111111111111111111000100 z"
b1111111111111111111111111111111111111111111111111111111111000100 v"
b101111111111111111111111111111000100 r"
b111 d"
b111 h"
#500
0G
b100101000111001110110011 H
b100101000111001110110011 L
b100101000111001110110011 A"
b10000 I
b10000 M
b10000 B"
b10000 S"
#510
b10100 ^
b10100 C"
b10100 T"
#550
1G
#570
b11111111111111111111111111111111 u
b11111111111111111111111111111111 ,"
b11111111111111111111111111111111 I"
b100101000111000000000000 P
b100101000111000000000000 5"
b100101000111000000000000 O#
b100101000111000000000000 S#
b1001 }
b1001 6"
b1001 Y#
b1001 ]#
b1000 !"
b1000 7"
b1000 X#
b1000 \#
b101 R
b101 R"
b101 [#
b111 D
b111 ("
b110 a
b110 e"
b110 i"
b110 l"
b110 o"
b110 s"
b110 w"
b110 {"
b110 !#
b110 $#
b110 '#
b110 *#
b110 -#
b110 0#
b110 3#
b110 6#
b110 9#
b110 `#
b11111111111111111111111111111111 %"
b11111111111111111111111111111111 H"
b11111111111111111111111111111111 g"
b110 b
b110 U#
b110 _#
b101 c
b101 f"
b101 j"
b101 m"
b101 p"
b101 t"
b101 x"
b101 |"
b101 "#
b101 %#
b101 (#
b101 +#
b101 .#
b101 1#
b101 4#
b101 7#
b101 :#
b101 R#
b111 '"
b111 8"
b111 <#
b111 =#
b100101000111 C#
b1001 J#
b111 D#
1M#
b11 K#
b1000111 H#
1G#
b100 F#
b111 2"
b111 1"
b1001 W#
b1000 V#
b10 S
b10 O"
b10 Z#
b101 s
b101 M"
b101 P"
1Q
0d
b1 Z
b1 0"
b1 L"
b101 A
b101 l
b101 ."
b111 t
b111 -"
b111 J"
0T
b110 &"
b110 9"
b110 U"
b100 [
b100 )"
b100 @"
b110 z
b110 *"
b110 <"
b110 |
b110 +"
b110 ;"
b110 T#
b101 ~
b101 :"
b101 Q#
b1100 _
b1100 >"
b1100 P#
b10000 \
b10000 ?"
b10000 G"
b11000101110000000000000 O
b11000101110000000000000 ="
b10000 `
b10000 4"
b10000 E"
b10100 ]
b10100 3"
b10100 F"
b100101000111001110110011 x
b100101000111001110110011 D"
b100101000111001110110011 ;#
b100101000111001110110011 B#
#590
b111 u
b111 ,"
b111 I"
b0 ^"
b0 }"
b0 _"
b0 y"
b0 `"
b0 u"
b11110 a"
b11110 q"
b111 %"
b111 H"
b111 g"
b1 Y"
b1 /#
b11 V"
b11 8#
b111 ]"
b111 ##
b100 c"
b100 k"
b101000000 Z"
b101000000 ,#
b101 ["
b101 )#
b101 \"
b101 &#
b11110 ~"
b11110 z"
b11110 v"
b11110 r"
b1011 d"
b1011 h"
#600
0G
b110001011100010100110011 H
b110001011100010100110011 L
b110001011100010100110011 A"
b10100 I
b10100 M
b10100 B"
b10100 S"
#610
b11000 ^
b11000 C"
b11000 T"
#650
b101 #
1G
#670
b110001011100000000000000 P
b110001011100000000000000 5"
b110001011100000000000000 O#
b110001011100000000000000 S#
b1100 }
b1100 6"
b1100 Y#
b1100 ]#
b1011 !"
b1011 7"
b1011 X#
b1011 \#
b100 u
b100 ,"
b100 I"
b1001 a
b1001 e"
b1001 i"
b1001 l"
b1001 o"
b1001 s"
b1001 w"
b1001 {"
b1001 !#
b1001 $#
b1001 '#
b1001 *#
b1001 -#
b1001 0#
b1001 3#
b1001 6#
b1001 9#
b1001 `#
b100 '"
b100 8"
b100 <#
b100 =#
b110001011100 C#
b1100 J#
b1010 D#
0M#
b101 K#
b1011100 H#
0G#
b110 F#
b1010 2"
b100 1"
b1100 W#
b1011 V#
b100 %"
b100 H"
b100 g"
b1001 b
b1001 U#
b1001 _#
b1000 c
b1000 f"
b1000 j"
b1000 m"
b1000 p"
b1000 t"
b1000 x"
b1000 |"
b1000 "#
b1000 %#
b1000 (#
b1000 +#
b1000 .#
b1000 1#
b1000 4#
b1000 7#
b1000 :#
b1000 R#
b111 R
b111 R"
b111 [#
b10100 `
b10100 4"
b10100 E"
b11000 ]
b11000 3"
b11000 F"
b110001011100010100110011 x
b110001011100010100110011 D"
b110001011100010100110011 ;#
b110001011100010100110011 B#
b111 &"
b111 9"
b111 U"
b111 [
b111 )"
b111 @"
b111 z
b111 *"
b111 <"
b1001 |
b1001 +"
b1001 ;"
b1001 T#
b1000 ~
b1000 :"
b1000 Q#
b10000 _
b10000 >"
b10000 P#
b10100 \
b10100 ?"
b10100 G"
b100101000111000000000000 O
b100101000111000000000000 ="
b100 Z
b100 0"
b100 L"
b110 E
b110 {
b110 /"
b110 A
b110 l
b110 ."
b1 S
b1 O"
b1 Z#
b111 s
b111 M"
b111 P"
#690
b1000 u
b1000 ,"
b1000 I"
b1001000 a"
b1001000 q"
b1000 %"
b1000 H"
b1000 g"
b1 V"
b1 8#
b1001 ]"
b1001 ##
b1000 c"
b1000 k"
b1000000000000 Z"
b1000000000000 ,#
b1000 ["
b1000 )#
b1000 \"
b1000 &#
b1001000 ~"
b1001000 z"
b1001000 v"
b1001000 r"
b10001 d"
b10001 h"
#700
0G
b101001110000011010010011 H
b101001110000011010010011 L
b101001110000011010010011 A"
b11000 I
b11000 M
b11000 B"
b11000 S"
#710
b11100 ^
b11100 C"
b11100 T"
#750
b111 "
1G
#770
b1 u
b1 ,"
b1 I"
b1100 a
b1100 e"
b1100 i"
b1100 l"
b1100 o"
b1100 s"
b1100 w"
b1100 {"
b1100 !#
b1100 $#
b1100 '#
b1100 *#
b1100 -#
b1100 0#
b1100 3#
b1100 6#
b1100 9#
b1100 `#
b1010 P
b1010 5"
b1010 O#
b1010 S#
b1010 }
b1010 6"
b1010 Y#
b1010 ]#
b1110 !"
b1110 7"
b1110 X#
b1110 \#
b1000 D
b1000 ("
b1 %"
b1 H"
b1 g"
b1100 b
b1100 U#
b1100 _#
b1011 c
b1011 f"
b1011 j"
b1011 m"
b1011 p"
b1011 t"
b1011 x"
b1011 |"
b1011 "#
b1011 %#
b1011 (#
b1011 +#
b1011 .#
b1011 1#
b1011 4#
b1011 7#
b1011 :#
b1011 R#
b1 y
b1 ?#
b1 A#
0i
b0 '"
b0 8"
b0 <#
b0 =#
b10011 @#
b101001110000 C#
b1010 J#
b1101 D#
1M#
b110 K#
b1110000 H#
b101 F#
b1101 2"
b0 1"
b1010 W#
b1110 V#
b100 S
b100 O"
b100 Z#
b111 Z
b111 0"
b111 L"
b111 E
b111 {
b111 /"
b1001 A
b1001 l
b1001 ."
b1000 t
b1000 -"
b1000 J"
b100 &"
b100 9"
b100 U"
b1010 [
b1010 )"
b1010 @"
b100 z
b100 *"
b100 <"
b1100 |
b1100 +"
b1100 ;"
b1100 T#
b1011 ~
b1011 :"
b1011 Q#
b10100 _
b10100 >"
b10100 P#
b11000 \
b11000 ?"
b11000 G"
b110001011100000000000000 O
b110001011100000000000000 ="
b11000 `
b11000 4"
b11000 E"
b11100 ]
b11100 3"
b11100 F"
b101001110000011010010011 x
b101001110000011010010011 D"
b101001110000011010010011 ;#
b101001110000011010010011 B#
#790
b111 u
b111 ,"
b111 I"
b10000100 a"
b10000100 q"
b111 %"
b111 H"
b111 g"
b111 V"
b111 8#
b1111 ]"
b1111 ##
b1011000000000000 Z"
b1011000000000000 ,#
b1011 ["
b1011 )#
b1011 \"
b1011 &#
b10000100 ~"
b10000100 z"
b10000100 v"
b10000100 r"
b10111 d"
b10111 h"
#800
0G
#850
b111 %
1G
#870
b10111 u
b10111 ,"
b10111 I"
b1010 a
b1010 e"
b1010 i"
b1010 l"
b1010 o"
b1010 s"
b1010 w"
b1010 {"
b1010 !#
b1010 $#
b1010 '#
b1010 *#
b1010 -#
b1010 0#
b1010 3#
b1010 6#
b1010 9#
b1010 `#
b10111 %"
b10111 H"
b10111 g"
b1010 b
b1010 U#
b1010 _#
b1110 c
b1110 f"
b1110 j"
b1110 m"
b1110 p"
b1110 t"
b1110 x"
b1110 |"
b1110 "#
b1110 %#
b1110 (#
b1110 +#
b1110 .#
b1110 1#
b1110 4#
b1110 7#
b1110 :#
b1110 R#
b111 D
b111 ("
b1000 R
b1000 R"
b1000 [#
0h
b0 &"
b0 9"
b0 U"
b1101 [
b1101 )"
b1101 @"
b0 z
b0 *"
b0 <"
b1010 |
b1010 +"
b1010 ;"
b1010 T#
b1110 ~
b1110 :"
b1110 Q#
b11000 _
b11000 >"
b11000 P#
b11100 \
b11100 ?"
b11100 G"
b1010 O
b1010 ="
b1010 Z
b1010 0"
b1010 L"
b100 E
b100 {
b100 /"
b1100 A
b1100 l
b1100 ."
b111 t
b111 -"
b111 J"
b111 S
b111 O"
b111 Z#
b1000 s
b1000 M"
b1000 P"
#890
b11000 u
b11000 ,"
b11000 I"
b10001100 a"
b10001100 q"
b11000 %"
b11000 H"
b11000 g"
b100 V"
b100 8#
b0 X"
b0 2#
b0 Y"
b0 /#
b1110 ]"
b1110 ##
b1010 c"
b1010 k"
b11100000000000 Z"
b11100000000000 ,#
b100 ["
b100 )#
b100 \"
b100 &#
b10001100 ~"
b10001100 z"
b10001100 v"
b10001100 r"
b1 b"
b1 n"
b11000 d"
b11000 h"
#900
0G
#950
b1000 (
1G
#970
b111 R
b111 R"
b111 [#
b11000 D
b11000 ("
b1010 S
b1010 O"
b1010 Z#
b111 s
b111 M"
b111 P"
b1101 Z
b1101 0"
b1101 L"
b0 E
b0 {
b0 /"
b1010 A
b1010 l
b1010 ."
b11000 t
b11000 -"
b11000 J"
#1000
0G
#1050
b111 }
b111 6"
b111 Y#
b111 ]#
b111 +
1G
#1070
b11000 R
b11000 R"
b11000 [#
b111 |
b111 +"
b111 ;"
b111 T#
b1101 S
b1101 O"
b1101 Z#
b11000 s
b11000 M"
b11000 P"
#1100
0G
#1150
b11000 .
1G
#1170
b111 A
b111 l
b111 ."
#1200
0G
#1250
b11000 .
1G
#1300
0G
#1350
b11000 .
1G
#1400
0G
#1450
b11000 .
1G
#1500
0G
#1550
b11000 .
1G
#1600
0G
#1650
b11000 .
1G
#1700
0G
